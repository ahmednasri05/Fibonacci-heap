digraph FibonacciHeap {
    graph [rankdir=TB];
    node [shape=plaintext];
    MinPointer [shape=plaintext, label="<Minimum Node>", fontcolor=red];
    Node0xfe18a0 [label=<
        <table border="1" cellborder="0" cellspacing="0">
            <tr><td colspan="2"><b>Node</b></td></tr>
            <tr><td><b>Name:</b></td><td>John Doe</td></tr>
            <tr><td><b>ID:</b></td><td>10001</td></tr>
            <tr><td><b>Priority:</b></td><td>-9</td></tr>
            <tr><td><b>Description:</b></td><td>Flu</td></tr>
        </table>
    >];
    MinPointer -> Node0xfe18a0 [color=red, penwidth=2];
    Node0xfe18a0 -> Node0xfe0520 [label="right", color=green, constraint=false];
    Node0xfe18a0 -> Node0xfeb2d0 [label="left", color=orange, constraint=false];
    Node0xfe0520 [label=<
        <table border="1" cellborder="0" cellspacing="0">
            <tr><td colspan="2"><b>Node</b></td></tr>
            <tr><td><b>Name:</b></td><td>Jane Smith</td></tr>
            <tr><td><b>ID:</b></td><td>10002</td></tr>
            <tr><td><b>Priority:</b></td><td>-7</td></tr>
            <tr><td><b>Description:</b></td><td>Cold</td></tr>
        </table>
    >];
    Node0xfe0520 -> Node0xfeb0e0 [label="right", color=green, constraint=false];
    Node0xfe0520 -> Node0xfe18a0 [label="left", color=orange, constraint=false];
    Node0xfeb0e0 [label=<
        <table border="1" cellborder="0" cellspacing="0">
            <tr><td colspan="2"><b>Node</b></td></tr>
            <tr><td><b>Name:</b></td><td>Alice Johnson</td></tr>
            <tr><td><b>ID:</b></td><td>10003</td></tr>
            <tr><td><b>Priority:</b></td><td>-6</td></tr>
            <tr><td><b>Description:</b></td><td>Broken leg</td></tr>
        </table>
    >];
    Node0xfeb0e0 -> Node0xfeb1d8 [label="right", color=green, constraint=false];
    Node0xfeb0e0 -> Node0xfe0520 [label="left", color=orange, constraint=false];
    Node0xfeb1d8 [label=<
        <table border="1" cellborder="0" cellspacing="0">
            <tr><td colspan="2"><b>Node</b></td></tr>
            <tr><td><b>Name:</b></td><td>Bob Brown</td></tr>
            <tr><td><b>ID:</b></td><td>10004</td></tr>
            <tr><td><b>Priority:</b></td><td>-5</td></tr>
            <tr><td><b>Description:</b></td><td>Heart attack</td></tr>
        </table>
    >];
    Node0xfeb1d8 -> Node0xfeb2d0 [label="right", color=green, constraint=false];
    Node0xfeb1d8 -> Node0xfeb0e0 [label="left", color=orange, constraint=false];
    Node0xfeb2d0 [label=<
        <table border="1" cellborder="0" cellspacing="0">
            <tr><td colspan="2"><b>Node</b></td></tr>
            <tr><td><b>Name:</b></td><td>Eve Davis</td></tr>
            <tr><td><b>ID:</b></td><td>10005</td></tr>
            <tr><td><b>Priority:</b></td><td>-8</td></tr>
            <tr><td><b>Description:</b></td><td>Stroke</td></tr>
        </table>
    >];
    Node0xfeb2d0 -> Node0xfe18a0 [label="right", color=green, constraint=false];
    Node0xfeb2d0 -> Node0xfeb1d8 [label="left", color=orange, constraint=false];
    { rank=same; Node0xfe18a0; Node0xfe0520; Node0xfeb0e0; Node0xfeb1d8; Node0xfeb2d0; }
}
